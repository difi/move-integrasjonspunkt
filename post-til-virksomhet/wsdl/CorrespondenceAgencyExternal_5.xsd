<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.altinn.no/services/ServiceEngine/Correspondence/2013/11" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.altinn.no/services/ServiceEngine/Correspondence/2013/11">
  <xs:import schemaLocation="CorrespondenceAgencyExternal_6.xsd" namespace="http://schemas.altinn.no/services/serviceEntity/2013/11"/>
  <xs:import schemaLocation="CorrespondenceAgencyExternal_7.xsd" namespace="http://schemas.altinn.no/serviceengine/formsengine/2009/10"/>
  <xs:complexType name="CorrespondenceStatusFilter">
    <xs:annotation>
      <xs:appinfo/>
      <xs:documentation>&lt;summary>
            Represents the request object used as input to the GetCorrespondenceStatusDetails operation in the CorrespondenceAgency service.
            It has fields for different filter options presented by the operation.
            &lt;/summary></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="CreatedAfterDate" nillable="true" type="xs:dateTime">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the creation date of the correspondence.
            Includes correspondence newer than the set date.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CreatedBeforeDate" nillable="true" type="xs:dateTime">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the creation date of the correspondence.
            Includes correspondence older than the set date.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CurrentStatus" type="q1:CorrespondenceStatusType" xmlns:q1="http://schemas.altinn.no/services/serviceEntity/2013/11">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the current status of the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="NotificationSent" nillable="true" type="xs:boolean">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the status of notifications.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Reportee" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the recipient of the correspondence.
            &lt;/summary>
            &lt;remarks>
            Value must be an organization number or social security number.
            &lt;/remarks></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="SendersReference" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the senders reference value on the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ServiceCode" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the service code. This field is mandatory.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ServiceEditionCode" type="xs:int">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value used to filter correspondence based on the service edition code. This field is mandatory.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CorrespondenceStatusFilter" nillable="true" type="tns:CorrespondenceStatusFilter"/>
  <xs:complexType name="CorrespondenceStatusResult">
    <xs:annotation>
      <xs:appinfo/>
      <xs:documentation>&lt;summary>
            Represents the response from the GetCorrespondenceStatusDetails operation in the CorrespondenceAgency service.
            &lt;/summary></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="LimitReached" type="xs:boolean">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a value indicating whether the result set is larger than the list can hold.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ServiceCode" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the service code for the correspondences in the list.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ServiceEditionCode" type="xs:int">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the service edition code for the correspondences in the list.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StatusList" nillable="true" type="tns:ArrayOfStatus">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the list of correspondences and their statuses.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CorrespondenceStatusResult" nillable="true" type="tns:CorrespondenceStatusResult"/>
  <xs:complexType name="ArrayOfStatus">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Status" nillable="true" type="tns:Status"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStatus" nillable="true" type="tns:ArrayOfStatus"/>
  <xs:complexType name="Status">
    <xs:annotation>
      <xs:appinfo/>
      <xs:documentation>&lt;summary>
            Represents details about the status of a Correspondence. 
            &lt;/summary></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="CorrespondenceID" type="xs:int">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the unique id of the correspondence
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="CreatedDate" type="xs:dateTime">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the created date for the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Notifications" nillable="true" type="tns:ArrayOfNotification">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a list of notifications that has been sent to recipients regarding the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Reportee" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the reportee of the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="SendersReference" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the senders reference on the correspondence.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StatusChanges" nillable="true" type="tns:ArrayOfStatusChange">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets a list of status changes the correspondence has gone through.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Status" nillable="true" type="tns:Status"/>
  <xs:complexType name="ArrayOfNotification">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Notification" nillable="true" type="tns:Notification"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfNotification" nillable="true" type="tns:ArrayOfNotification"/>
  <xs:complexType name="Notification">
    <xs:annotation>
      <xs:appinfo/>
      <xs:documentation>&lt;summary>
            Represents details about a notification.
            &lt;/summary></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="Recipient" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the recipient of the notification.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="SentDate" nillable="true" type="xs:dateTime">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the date for when the notification was sent to the recipient. 
            &lt;/summary>
            &lt;remarks>
            If the field is empty (null), it means that the notification has not been sent yet.
            &lt;/remarks></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="TransportType" type="q2:TransportType" xmlns:q2="http://schemas.altinn.no/serviceengine/formsengine/2009/10">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the type of transport the notification was sent on.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Notification" nillable="true" type="tns:Notification"/>
  <xs:complexType name="ArrayOfStatusChange">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="StatusChange" nillable="true" type="tns:StatusChange"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfStatusChange" nillable="true" type="tns:ArrayOfStatusChange"/>
  <xs:complexType name="StatusChange">
    <xs:annotation>
      <xs:appinfo/>
      <xs:documentation>&lt;summary>
            Represents a status change on a correspondence element.
            &lt;/summary></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="StatusDate" type="xs:dateTime">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the date for when the status was changed to the given value.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="StatusType" type="q3:CorrespondenceStatusType" xmlns:q3="http://schemas.altinn.no/services/serviceEntity/2013/11">
        <xs:annotation>
          <xs:appinfo/>
          <xs:documentation>&lt;summary>
            Gets or sets the status that were set.
            &lt;/summary></xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="StatusChange" nillable="true" type="tns:StatusChange"/>
</xs:schema>